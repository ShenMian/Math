name: Test

on:
  push:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - '.github/workflows/test.yml'

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    name: ${{matrix.os}}
    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Checkout dependencies
        run: git submodule update --init

      - name: Install Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: 13

      - name: Configure CMake
        run: cmake -B "${{github.workspace}}/build" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build "${{github.workspace}}/build" --config ${{env.BUILD_TYPE}}

      - name: Test
        run: cd build && ctest -VV -C ${{env.BUILD_TYPE}}

      - name: Setup OpenCppCoverage (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install OpenCppCoverage -y
          echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH

      - name: Generate report (Windows)
        if: matrix.os == 'windows-latest'
        run: OpenCppCoverage.exe --sources "${{github.workspace}}\Source" --export_type cobertura:report.xml -- "${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/unit_test.exe"

      - name: Upload report to Codecov (Windows)
        if: matrix.os == 'windows-latest'
        uses: codecov/codecov-action@v2.1.0
        with:
          files: ./report.xml
          fail_ci_if_error: true
